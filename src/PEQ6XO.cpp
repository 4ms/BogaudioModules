
#include "PEQ6XO.hpp"

void PEQ6XO::processAll(const ProcessArgs& args) {
	for (int i = 0; i < 6; ++i) {
		outputs[BAND1_OUTPUT + i].setChannels(_channels);
	}
}

void PEQ6XO::processChannel(const ProcessArgs& args, int c) {
	if (baseConnected()) {
		float* outs = fromBase()->outs[c];
		for (int i = 0; i < 6; ++i) {
			outputs[BAND1_OUTPUT + i].setVoltage(outs[i], c);
		}
	}
	else {
		for (int i = 0; i < 6; ++i) {
			outputs[BAND1_OUTPUT + i].setVoltage(0.0f, c);
		}
	}
}

struct PEQ6XOWidget : ModuleWidget {
	static constexpr int hp = 3;

	PEQ6XOWidget(PEQ6XO* module) {
		setModule(module);
		box.size = Vec(RACK_GRID_WIDTH * hp, RACK_GRID_HEIGHT);

		{
			SvgPanel *panel = new SvgPanel();
			panel->box.size = box.size;
			panel->setBackground(APP->window->loadSvg(asset::plugin(pluginInstance, "res/PEQ6XO.svg")));
			addChild(panel);
		}

		addChild(createWidget<ScrewSilver>(Vec(0, 0)));
		addChild(createWidget<ScrewSilver>(Vec(box.size.x - 15, 365)));

		// generated by svg_widgets.rb
		auto band1OutputPosition = Vec(10.5, 43.0);
		auto band2OutputPosition = Vec(10.5, 78.0);
		auto band3OutputPosition = Vec(10.5, 113.0);
		auto band4OutputPosition = Vec(10.5, 148.0);
		auto band5OutputPosition = Vec(10.5, 183.0);
		auto band6OutputPosition = Vec(10.5, 218.0);
		// end generated by svg_widgets.rb

		addOutput(createOutput<Port24>(band1OutputPosition, module, PEQ6XO::BAND1_OUTPUT));
		addOutput(createOutput<Port24>(band2OutputPosition, module, PEQ6XO::BAND2_OUTPUT));
		addOutput(createOutput<Port24>(band3OutputPosition, module, PEQ6XO::BAND3_OUTPUT));
		addOutput(createOutput<Port24>(band4OutputPosition, module, PEQ6XO::BAND4_OUTPUT));
		addOutput(createOutput<Port24>(band5OutputPosition, module, PEQ6XO::BAND5_OUTPUT));
		addOutput(createOutput<Port24>(band6OutputPosition, module, PEQ6XO::BAND6_OUTPUT));
	}
};

Model* modelPEQ6XO = createModel<PEQ6XO, PEQ6XOWidget>("Bogaudio-PEQ6XO", "PEQ6XO", "PEQ6 band outputs expander", "Filter", "Expander", "Polyphonic");
